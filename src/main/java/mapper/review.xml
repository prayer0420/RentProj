<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.review">

    <!-- 리뷰쓰기 -->
    <insert id="insertReview" parameterType="Review" useGeneratedKeys="true" keyProperty="no">
        INSERT INTO review (no, memberNo, contents, score, productNo, memberNickname)
        VALUES (#{no}, #{memberNo}, #{contents}, #{score}, #{productNo}, #{memberNickname})
    </insert>

    <!-- 리뷰삭제 -->
    <delete id="deleteReview" parameterType="int">
        DELETE FROM review WHERE no = #{no}
    </delete>

    <!-- 리뷰수정 -->
    <update id="updateReview" parameterType="review">
        UPDATE review SET contents = #{contents}, score = #{score}, date = #{date} WHERE no = #{no}
    </update>

    <!-- 상품별 리뷰 조회 -->
    <select id="selectByProductNo" parameterType="int" resultType="review">
        SELECT * FROM review WHERE productNo = #{productNo} ORDER BY no DESC
    </select>

    <!-- 상품 평균 평점 -->
    <select id="selectAvgScore" parameterType="int" resultType="double">
        SELECT ROUND(AVG(score), 1) FROM review WHERE productNo = #{productNo}
    </select>

    <!-- 내 상품에 달린 리뷰 목록 -->
    <select id="getMyProductReviewList" parameterType="int" resultType="review">
        SELECT r.*, p.title, p.img1 AS img
        FROM review r
        JOIN product p ON r.productNo = p.no
        WHERE p.memberNo = #{memberNo}
        ORDER BY r.date DESC
    </select>
    
    
	<!-- 리뷰 리스트 조회 -->
	<select id="getReviewList" parameterType="map" resultType="review">
	    <choose>
	        <when test="type == 'writable'">
	            SELECT o.orderNo, o.orderDate AS date, o.productNo, p.title, p.img1 AS img
	            FROM `order` o
	            JOIN product p ON o.productNo = p.no
	            LEFT JOIN review r ON o.productNo = r.productNo AND o.memberNo = r.memberNo
	            WHERE o.memberNo = #{memberNo}
	              AND (o.orderStatus = '대여종료' OR o.orderStatus = '거래완료')
	              AND r.no IS NULL
	            ORDER BY o.orderDate DESC
	            LIMIT #{startRow}, #{pageSize}
	        </when>
	        <when test="type == 'written'">
	            SELECT r.no, r.memberNo, r.contents, r.score, r.productNo, r.date, p.title, p.img1 AS img
	            FROM review r
	            JOIN product p ON r.productNo = p.no
	            WHERE r.memberNo = #{memberNo}
	            ORDER BY r.date DESC
	            LIMIT #{startRow}, #{pageSize}
	        </when>
	        <when test="type == 'myproduct'">
	            SELECT r.no, r.memberNo, r.contents, r.score, r.productNo, r.date, p.title, p.img1 AS img
	            FROM review r
	            JOIN product p ON r.productNo = p.no
	            WHERE p.memberNo = #{memberNo}
	            ORDER BY r.date DESC
	            LIMIT #{startRow}, #{pageSize}
	        </when>
	    </choose>
	</select>
	
	<!-- 리뷰 개수 조회 -->
	<select id="getReviewCount" parameterType="map" resultType="int">
	    <choose>
	        <when test="type == 'writable'">
	            SELECT COUNT(*)
	            FROM `order` o
	            LEFT JOIN review r ON o.productNo = r.productNo AND o.memberNo = r.memberNo
	            WHERE o.memberNo = #{memberNo}
	              AND (o.orderStatus = '대여종료' OR o.orderStatus = '거래완료')
	              AND r.no IS NULL
	        </when>
	        <when test="type == 'written'">
	            SELECT COUNT(*)
	            FROM review
	            WHERE memberNo = #{memberNo}
	        </when>
	        <when test="type == 'myproduct'">
	            SELECT COUNT(*)
	            FROM review r
	            JOIN product p ON r.productNo = p.no
	            WHERE p.memberNo = #{memberNo}
	        </when>
	    </choose>
	</select>


</mapper>
