<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="mapper.mypage">

	<!-- 나의 판매상품 전체 숫자(*페이징에 필요) -->
	<select id="selectProductCnt" parameterType="String" resultType="Integer">
		select count(*) from product p join member m
		on (p.memberNo = m.no)
		where m.id=#{id} and p.tradeType='판매'
	</select>
	
	<!-- 나의 판매상품 리스트(MySell) 불러오기 -->
	<select id="selectProductListByPage" parameterType="map" resultType="map">
		select 
		p.no, p.createDate, p.title, p.img1, p.salePrice, p.deliveryprice, p.deliveryStatus, o.orderNo, o.orderStatus
		from product p 
		left join `order` o on (p.no = o.productNo)
		join member m on (p.memberNo=m.no)
        where m.id=#{id} and o.orderType='판매' and p.deleted='N'
        order by p.no desc limit #{row},5
	</select>
	
	<!-- 나의 판매내역 상세(MySellDetail) 불러오기  -->
	<select id="selectMySellDetail" parameterType="map" resultType="map">
		select 
		p.*, o.orderId, o.orderDate, o.deliveryAddr, o.paymentType, o.invoiceNo, o.deliveryComp,
		m1.name, m1.id, m1.phone
        from Product p 
        join `Order` o On (o.productNo = p.no)
        join member m1 On (o.memberNo = m1.no)
		  JOIN member m2 ON p.memberNo = m2.no
		  where o.orderNo=#{orderNo} and m2.id=#{id} and p.tradeType='판매'
	</select>
	
	<!-- 송장번호, 택배사 정보 업데이트 -->
	<update id="updateInvoiceNo" parameterType="map">
		 UPDATE `Order` 
		 SET deliveryComp=#{deliveryComp}, invoiceNo=#{invoiceNo}, orderStatus='배송중' 
		 WHERE orderNo=#{orderNo}
	</update>
	
	<!-- 나의 구매상품 전체 숫자 (*페이징에 필요) -->
	<select id="selectOrderCnt" parameterType="String" resultType="Integer">
		select count(*) from `Order` o join member m
		on (o.memberNo = m.no)
		where m.id=#{id} and o.orderType='판매'
	</select>
	
	<!-- 나의 구매상품 리스트(MyOrder) 불러오기 -->
	<select id="selectOrderListByPage" parameterType="map" resultType="map">
		select o.*, p.*
		from `order` o 
		left join product p on (p.no = o.productNo)
		join member m on (o.memberNo=m.no)
        where m.id=#{id} and o.orderType='판매'
        order by o.orderNo desc limit #{row},5
	</select>
	
	<!-- 나의 구매내역 상세(MyOrderDetail) 불러오기  -->
	<select id="selectMyOrderDetail" parameterType="map" resultType="map">
		select p.*, o.*, m1.name, m2.id, m2.phone
        from Product p 
        join `Order` o On (o.productNo = p.no)
        join member m1 On (o.memberNo = m1.no)
		  JOIN member m2 ON p.memberNo = m2.no
		  where o.orderNo=#{orderNo} and m1.id=#{id} and o.orderType='판매'
	</select>
	
	<!-- 나의 빌린상품 전체 숫자 (*페이징에 필요) -->
	<select id="selectRentCnt" parameterType="String" resultType="Integer">
		select count(*) from `Order` o join member m
		on (o.memberNo = m.no)
		where m.id=#{id} and o.orderType='대여'
	</select>
	
	<!-- 나의 빌린상품 리스트(MyRent) 불러오기 -->
	<select id="selectRentListByPage" parameterType="map" resultType="map">
		select o.*, p.*
		from `order` o 
		left join product p on (p.no = o.productNo)
		join member m on (o.memberNo=m.no)
        where m.id=#{id} and o.orderType='대여' 
        order by o.orderNo desc limit #{row},5
	</select>
	
	<!-- 나의 빌리기 내역 상세(MyRentDetail) 불러오기  -->
	<select id="selectMyRentDetail" parameterType="map" resultType="map">
		select p.*, o.*, m1.name, m2.id, m2.phone, m2.address1
        from Product p 
        join `Order` o On (o.productNo = p.no)
        join member m1 On (o.memberNo = m1.no)
		  JOIN member m2 ON p.memberNo = m2.no
		  where o.orderNo=#{orderNo} and m1.id=#{id} and o.orderType='대여'
	</select>
	
	
	<!-- 나의 대여(빌려주는)상품 전체 숫자 (*페이징에 필요) -->
	<select id="selectLendCnt" parameterType="String" resultType="Integer">
		select count(*) from product p join member m
		on (p.memberNo = m.no)
		where m.id=#{id} and p.tradeType='대여' 
	</select>
	
	<!-- 나의 대여(빌려주는)상품 리스트(MyLend) 불러오기 -->
	<select id="selectLendListByPage" parameterType="map" resultType="map">
		select 
		p.no, p.createDate, p.title, p.img1, p.deliveryStatus, o.*
		from product p 
		left join `order` o on (p.no = o.productNo)
		join member m on (p.memberNo=m.no)
        where m.id=#{id} and p.tradeType='대여' and p.deleted='N'
        order by p.no desc limit #{row},5 
	</select>
	
	
	<!-- 나의 대여(빌려주는)내역 상세(MyLendDetail) 불러오기  -->
	<select id="selectMyLendDetail" parameterType="map" resultType="map">
		select 
		p.no, p.title, p.img1, p.tradeType, o.*,
		m1.name, m1.id, m1.phone
        from Product p 
        join `Order` o On (o.productNo = p.no)
        join member m1 On (o.memberNo = m1.no)
		  JOIN member m2 ON p.memberNo = m2.no
		  where o.orderNo=#{orderNo} and m2.id=#{id} and p.tradeType='대여'
	</select>
	
	<!-- 내가 대여(빌려주는)중인 상품의 대여내역(history) 불러오기  -->
	<select id="selectLendHistoryByProductNo" parameterType="Integer" resultType="Order">
		select o.*
		from `order` o join product p On p.no = o.productNo
		join member m On m.no = o.memberNo
		where o.productNo=#{productNo} 	
		order by orderDate desc
	</select>
	
	<!-- 상품의 대여내역(history)에서 선택된 행의 대여 상세정보를 (같은 페이지 상단에) 불러오기  -->
	<select id="selectLendHistoryDetail" parameterType="map" resultType="map">
		select o.*, m.id, m.phone
		from `Order` o join Member m
		on (o.memberNo = m.no)
		where o.orderNo = #{orderNo} and o.orderType='대여'
	</select>
	
	<!-- 나의 판매상품 리스트(mySell)에서 상품 삭제하기 -->
	<update id="deleteMyProduct" parameterType="Integer">
		 Update Product set deleted='Y' WHERE no = #{no}
	</update>
	
	<!-- 나의 판매상품 리스트(mySell)에서 상품 숨기기 -->
	<update id="hideMyProduct" parameterType="Integer">
		 Update Product set isHide=0 WHERE no = #{_parameter}
	</update>
	
	
	<!-- '구매확정' 버튼 누르면 '거래완료'로 상태 업데이트 -->
	<update id="updateOrderStatusToCompleted" parameterType="Integer">
		update `order` set orderStatus='거래완료' where orderNo=#{orderNo}
	</update>
	
	
	<!-- '빌리기시작' 버튼 누르면 '대여중'으로 상태 업데이트 -->
	<update id="updateRentStart" parameterType="Integer">
		update `order` set orderStatus='대여중' where orderNo=#{orderNo}
	</update>
	
	
	<update id="updateReturnInvoiceInfo" parameterType="map">
		 UPDATE `Order` 
		 SET reDeliveryComp=#{reDeliveryComp}, reInvoiceNo=#{reInvoiceNo}, orderStatus='반납배송중' 
		 WHERE orderNo=#{orderNo}
	</update>
	
	
	<update id="updateRentCompleted" parameterType="Integer">
		update `order` set orderStatus='거래완료' where orderNo=#{orderNo}
	</update>
	
</mapper>